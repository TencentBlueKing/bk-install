upstream LESSCODE {
    {{ range service "lesscode" }}server {{ .Address }}:{{ .Port }} max_fails=1 fail_timeout=30s;
    {{else}}server 127.0.0.1:5002;{{ end }}
}

server {
    listen {{ key "bkcfg/ports/paas_http" }};
    server_name  {{ key "bkcfg/domain/lesscode" }};

    client_max_body_size 512m;
    access_log  {{ key "bkcfg/global/bk_home" }}/logs/nginx/lesscode_web_access.log main;
    error_log   {{ key "bkcfg/global/bk_home" }}/logs/nginx/lesscode_web_error.log error;

    {{ if key "bkcfg/global/bk_http_schema" | regexMatch "^https$" }}
        ### ssl config begin ###
        listen {{ key "bkcfg/ports/paas_https" }}  ssl;
        include /usr/local/openresty/nginx/conf/bk.ssl;
        # force https-redirects
        if ($scheme = http) {
            return 301 https://$server_name$request_uri;
        }
        ### ssl config end ###
    {{ end }}

    location / {
        proxy_pass http://LESSCODE;
        proxy_pass_header Server;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_read_timeout 600;
    }
}
